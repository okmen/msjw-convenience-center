<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.convenience.dao.mapper.SzjjTokenMapper">
  <resultMap id="BaseResultMap" type="cn.convenience.bean.SzjjToken">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="identity_card" jdbcType="VARCHAR" property="identityCard" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from szjj_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.convenience.bean.SzjjToken">
    insert into szjj_token (id, name, identity_card, 
      phone, open_id, token, 
      source, update_time, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{identityCard,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, 
      #{source,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
      ON DUPLICATE KEY UPDATE 
			`name`= #{name},
			`token` = #{token},
			`phone` = #{phone},
			`update_time` = now(); 
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.convenience.bean.SzjjToken">
    update szjj_token
    set name = #{name,jdbcType=VARCHAR},
      identity_card = #{identityCard,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, identity_card, phone, open_id, token, source, update_time, create_time
    from szjj_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByIdentityCard" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, name, identity_card, phone, open_id, token, source, update_time, create_time
    from szjj_token
    where identity_card = #{identityCard}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, identity_card, phone, open_id, token, source, update_time, create_time
    from szjj_token
  </select>
</mapper>