<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.convenience.dao.mapper.ActivityVoteMapper">
  <resultMap id="BaseResultMap" type="cn.convenience.bean.ActivityVote">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="security_declaration" jdbcType="VARCHAR" property="securityDeclaration" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="rownum" property="rank" />
  </resultMap>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from activity_vote
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="cn.convenience.bean.ActivityVote">
    insert into activity_vote (number, name, 
      img_url, security_declaration, count
      )
    values (#{number}, #{name}, 
      #{imgUrl}, #{securityDeclaration}, #{count}
      )
  </insert>
  <update id="updateById" parameterType="cn.convenience.bean.ActivityVote">
    update activity_vote
    set count = count + 1
    where id = #{id}
  </update>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
       select 
       id, 
       number, 
       name, 
       img_url, 
       security_declaration, 
       count
 	   from activity_vote
      where id = #{id}
  </select>
  <select id="selectRank" parameterType="java.lang.Integer" resultType="java.lang.Integer">
       select count(number) from activity_vote where count > #{count}
       
  </select>
  <select id="selectByName"  parameterType="java.lang.String" resultMap="BaseResultMap">
       select 
        id, 
        number, 
        name, 
        img_url, 
        security_declaration, 
        count
        from activity_vote
      where name = #{name}
  </select>
  <select id="getVoteByPage" resultMap="BaseResultMap">
         select 
         id, 
         number, 
         name, 
         img_url, 
         security_declaration, 
         count
         from activity_vote
         ORDER BY id
        limit #{page},#{pageSize}
  </select>
   <select id="getFrontVote" resultMap="BaseResultMap">
           select 
          id, 
          number, 
          name, 
         img_url, 
          security_declaration, 
          count
  		 from activity_vote
  		 where count != 0
 		 ORDER BY count DESC
        limit 0,#{total}
  </select>
  <select id="queryCount" resultType="java.lang.Integer">
    select count(id)
    from activity_vote
  </select>
  <select id="queryCountSum" resultType="java.lang.Integer">
    select sum(count)
    from activity_vote
  </select>
</mapper>